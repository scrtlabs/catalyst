language: python
python:
  - "3.6"
fast_finish: true

dist: trusty
sudo: required

cache:
  directories:
  - "$HOME/.cache/pip"
  - "$HOME/miniconda"
  timeout: 1000

-env:
  global:
  - MINICONDA_DIR="$HOME/miniconda"
  - CACHE_DIR="$HOME/.cache/pip/np114"

# Download Technical Analysis Library, ensure miniconda is available.
before_install:
- curl -L http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz --output
  ta-lib-0.4.0-src.tar.gz
- tar zxf ta-lib-0.4.0-src.tar.gz
- cd ta-lib && ./configure --prefix=/usr && make && sudo make install && cd ..
- |
  if [ -d "$MINICONDA_DIR" ] && [ -e "$MINICONDA_DIR/bin/conda" ]; then
    echo "Miniconda install already present from cache: $MINICONDA_DIR"
    export PATH="$MINICONDA_DIR/bin:$PATH"
  else
    rm -rf "$MINICONDA_DIR"
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p "$MINICONDA_DIR"
  fi
- export PATH="$MINICONDA_DIR/bin:$PATH"
- conda update --yes conda

# To install we check that conda is available, that there's a dedicated testenv for it,
# we activate the testenv, hit various requirements files for dependencies, and then do
# `pip install -e` - which I believe uses `setup.py` for further dependencies.
install:
- conda info -a
- |
  if [ ! -d \"$MINICONDA_DIR/envs/testenv\" ]; then
    conda env create -f etc/testenv.conda.yml
  fi
- source activate testenv
- pip install --upgrade pip coverage coveralls --cache-dir=$CACHE_DIR
- pip install -r etc/requirements.txt --cache-dir=$CACHE_DIR
- pip install -r etc/requirements_dev.txt --cache-dir=$CACHE_DIR
- pip install -r etc/requirements_blaze.txt --cache-dir=$CACHE_DIR
- pip install -r etc/requirements_talib.txt --cache-dir=$CACHE_DIR
- pip install -e . --cache-dir=$CACHE_DIR

before_script:
- pip freeze | sort

script:
- flake8 catalyst tests
- cd tests && nosetests

after_success:
- coveralls
